@page "/adultCreation"

@using global::Models
@using System.Text.Json
@using System.Text

<h3>AdultCreation</h3>

<label>First Name: &nbsp;</label>
<input type="text" placeholder="First Name" @bind-value="FirstName"/>
<br>

<label>Last Name: &nbsp;</label>
<input type="text" placeholder="Last Name" @bind-value="LastName"/>
<br>

<label>Hair Color: &nbsp;</label>
<input type="text" placeholder="Hair Color" @bind-value="HairColor"/>
<br>

<label>Eye Color: &nbsp;</label>
<input type="text" placeholder="Eye Color" @bind-value="EyeColor"/>
<br>

<label>Sex: &nbsp;</label>
<input type="text" placeholder="Sex" @bind-value="Sex"/>
<br>

<label>Age: &nbsp;</label>
<input type="text" placeholder="Age" @bind-value="Age"/>
<br>

<label>Height: &nbsp;</label>
<input type="text" placeholder="Height" @bind-value="Height"/>
<br>

<label>Weight: &nbsp;</label>
<input type="text" placeholder="Weight" @bind-value="Weight"/>
<br>

<label>Job Title: &nbsp;</label>
<input type="text" placeholder="Weight" @bind-value="jobTitleText"/>
<br>

<label>Salary: &nbsp;</label>
<input type="text" placeholder="Weight" @bind-value="salary"/>
<br>

<button class="btn btn-primary" @onclick="submit">Submit</button>

@code {
    private string FirstName, LastName, HairColor, EyeColor, Sex;
    private int Age, Height, Id;
    private float Weight;


    private string jobTitleText;
    private int salary;
    

   
    
    public void submit()
    {
        Adult tempA = new Adult();
        tempA.id = Id;
        tempA.firstName = FirstName;
        tempA.lastName = LastName;
        tempA.hairColor = HairColor;
        tempA.eyeColor = EyeColor;
        tempA.age = Age;
        tempA.weight = Weight;
        tempA.height = Height;
        tempA.sex = Sex;

        Job tempJob = new Job();
        tempJob.jobTitle = jobTitleText;
        tempJob.salary = salary;
        tempA.jobTitle = tempJob;
        try
        {
            Id = 0;
            
            //adultFromJson.Adults.Add(tempA);
            
            //adultFromJson.SaveChanges();

            //SEND TO REST API
            POST(tempA);
            
            //DONE SENDING TO REST API
            
            
            
            
            FirstName = "";
            LastName = "";
            HairColor = "";
            EyeColor = "";
            Sex = "";
            Age = new int();
            Height = new int();
            Id = new int();
            Weight = new float();
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            throw;
        }
    }

    private async static Task POST(Adult adult)
    {
        HttpClient client = new HttpClient();

        string adultAsJson = JsonSerializer.Serialize(adult);

        StringContent content = new StringContent(
            adultAsJson,
            Encoding.UTF8,
            "application/json"
            );

        HttpResponseMessage response = await client.PostAsync("https://localhost:5005/Adult", content);
        if (!response.IsSuccessStatusCode)
        {
            throw new Exception($@"Error: {response.StatusCode}, {response.ReasonPhrase}");
        }

    }
    
}