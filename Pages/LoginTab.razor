@page "/login"
@namespace LoginComponent2

@using LoginExample.Authentication
@using Models
@using System.Text.Json
@using System.Net.Http.Json
@using LoginExample.Models

@inject AuthenticationStateProvider AuthenticationStateProvider
@inject NavigationManager NavigationManager



<AuthorizeView>
    <NotAuthorized>
        
        
        <div class="p-3 mb-2 bg-light text-dark text-center card">
            <h3>Adult database login</h3>
            <div class="form-group">
                <input class="form-control" type="text" placeholder="Username" @bind-value="username"/>
            </div>
            <div class="form-group">
                <input class="form-control" type="password" placeholder="Password" @bind-value="password"/>
            </div>
            <div style="color:red">@errorMessage</div>

            <a class="btn btn-primary" @onclick="PerformLogin">
                <em class="text-light">Login</em>
            </a>

        </div>
    </NotAuthorized>
    <Authorized>
        <h1>Succes!</h1>
    </Authorized>
</AuthorizeView>



@code {
private string username;
private string password;
private string errorMessage;

public async Task PerformLogin() {
    errorMessage = "";
    try {
    //HttpClient client = new HttpClient();

        //string tmpString = "https://localhost:5005/UserLogin?userName=" + username.ToString() + "&password=" + password.ToString();
        //HttpResponseMessage responseMessage = await client.GetAsync(tmpString);
        //Console.WriteLine(responseMessage.IsSuccessStatusCode);
        //Console.WriteLine(responseMessage.Content.ReadAsStringAsync().Result);
        
        //User user = JsonSerializer.Deserialize<User>  (responseMessage.Content.ReadAsStringAsync().Result, new JsonSerializerOptions { PropertyNameCaseInsensitive = true });
        
        ((CustomAuthenticationStateProvider) AuthenticationStateProvider).ValidateLogin(username,password);
        
        //Console.WriteLine(user.UserName + user.Password + user.City);
        
        username = "";
        password = "";
    } catch (Exception e)
    {
        errorMessage = e.Message;
    }

    /*try
    {
        https://localhost:5005/UserLogin?userName=Troels&password=123456
        
        HttpClient client = new HttpClient();
        HttpResponseMessage responseMessage = await client.GetAsync("https://localhost:5005/Adult");

        if (!responseMessage.IsSuccessStatusCode)
        {
            throw new Exception($@"Error: {responseMessage.StatusCode}, {responseMessage.ReasonPhrase}");
        }

        string result = await responseMessage.Content.ReadAsStringAsync();

        List<Adult> adults2 = JsonSerializer.Deserialize<List < Adult >>  (result, new JsonSerializerOptions
        {
            PropertyNamingPolicy = JsonNamingPolicy.CamelCase
        });

        
        Console.WriteLine("Done fetching");
        return adults2;
    }
    catch (Exception e)
    {
        Console.WriteLine(e);
        throw;
    }*/
}

public async Task PerformLogout() {
errorMessage = "";
username = "";
password = "";
try {
((CustomAuthenticationStateProvider) AuthenticationStateProvider).Logout();
NavigationManager.NavigateTo("/");
} catch (Exception e) { }
}

}